// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
//   output   = "../app/generated/prisma"
// }

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
  // ⚠️ si tu as "output = \"app/generated/prisma\"", commente-le le temps de tester
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Film {
  id           Int         @id @default(autoincrement())
  title        String
  poster_path  String
  overview     String
  release_date DateTime
  genre_ids    Int[]
  vote_average Float
  runtime      Int?
  createdAt    DateTime    @default(now()) 
  
  latestList   LatestList? @relation("PopularFilms", fields: [latestListId], references: [id])
  latestListId Int?

  genres       Genre[]     @relation("FilmGenres")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String
}

model LatestList {
  id        Int      @id @default(autoincrement())
  name      String
  films     Film[]   @relation("PopularFilms")
  createdAt DateTime @default(now())
}

model Genre {
  id    Int    @id @default(autoincrement())
  name  String
  films Film[] @relation("FilmGenres")
}